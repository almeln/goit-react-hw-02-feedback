{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.jsx","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","css","counter","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","onClick","Section","title","children","section","Notification","message","notification","App","state","props","initialValue","leaveFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","PositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,OAAS,kC,mBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,2KCuBlBC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,oBAAGG,UAAWC,IAAIC,QAAlB,oBAAmCJ,KACnC,oBAAGE,UAAWC,IAAIC,QAAlB,gCAA+CH,EAA/C,W,iBCeSI,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEP,UAAWC,IAAIO,OACfC,KAAK,SAELC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAHIA,S,gBCMAI,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASb,UAAWC,IAAIa,QAAxB,UACE,oBAAId,UAAWC,IAAIW,MAAnB,SAA2BA,IAC1BC,M,iBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGhB,UAAWC,IAAIgB,aAAlB,SAAiCD,KCCpCE,E,4MAMJC,MAAQ,CACNxB,KAAM,EAAKyB,MAAMC,aACjBzB,QAAS,EAAKwB,MAAMC,aACpBxB,IAAK,EAAKuB,MAAMC,c,EA2BlBC,cAAgB,SAACf,GAEf,EAAKgB,UAAS,SAAAC,GACZ,OAAO,eACJjB,EAASiB,EAAUjB,GAAU,O,EAKpCkB,mBAAqB,WACnB,MAA+B,EAAKN,MAGpC,OAHA,EAAQxB,KAAR,EAAcC,QAAd,EAAuBC,K,EAMzB6B,gCAAkC,WAChC,IAAQ/B,EAAS,EAAKwB,MAAdxB,KAGFgC,GAAgBF,EAFtB,eAAQA,sBAGFG,EAA6BC,KAAKC,MACrCnC,EAAOgC,EAAiB,KAG3B,OAAa,IAAThC,EACKiC,EAEF,G,4CAGT,WACE,MAA+BG,KAAKZ,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfyB,EAAuES,KAAvET,cAAeG,EAAwDM,KAAxDN,mBAAoBC,EAAoCK,KAApCL,gCAE3C,OACE,gCACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACA,cAAC,EAAD,CACAR,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBiB,MAGjB,cAAC,EAAD,CAASV,MAAM,aAAf,SAC4B,IAAzBa,IACD,cAAC,EAAD,CAAcT,QAAQ,sBAEhC,cAAU,EAAV,CACUrB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,IACP1B,mBAAoB2B,e,GAxFZM,aAAZd,EAEGe,aAAe,CACpBZ,aAAc,GA8FHH,Q,MChGfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1B9C,EAAOC,QAAU,CAAC,QAAU,8B,kBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.c75b1ff2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3eZI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1R9QP\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from 'components/Statistics/Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p className={css.counter}>Total: {total}</p>\n      <p className={css.counter}>Positive Feedback: {positivePercentage}%</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from 'components/FeedbackOptions/FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(option => (\n        <button\n          className={css.button}\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from 'components/Section/Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from 'components/Notification/Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={css.notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\r\nimport Statistics from 'components/Statistics';\r\nimport FeedbackOptions from 'components/FeedbackOptions';\r\nimport Section from 'components/Section';\r\nimport Notification from 'components/Notification';\r\n\r\nclass App extends Component {\r\n  // начальное состояние от Пропс\r\n  static defaultProps = {\r\n    initialValue: 0,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.initialValue,\r\n    neutral: this.props.initialValue,\r\n    bad: this.props.initialValue,\r\n  };\r\n\r\n  // handleClick = event => {\r\n  //   console.log(this);\r\n  //   console.log('Click');\r\n\r\n  //   const { target } = event;\r\n\r\n  //   setTimeout(() => {\r\n  //     console.log(target);\r\n  //   }, 1000);\r\n\r\n  //   // Перезаписывает состояние\r\n\r\n  //   // this.setState({\r\n  //   //   good: 5,\r\n  //   // });\r\n\r\n  //   // Обновляет состояние\r\n  //   this.setState((prevState) => {\r\n  //     return {\r\n  //       good: prevState.good + 1,\r\n  //     };\r\n  //   });\r\n  // };\r\n\r\n  leaveFeedback = (option) => {\r\n    // перезаписывает состояние\r\n    this.setState(prevState => {\r\n      return {\r\n        [option]: prevState[option] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const totalFeedback = good + neutral + bad;\r\n    return totalFeedback;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const { countTotalFeedback } = this;\r\n\r\n    const totalFeedback = countTotalFeedback();\r\n    const PositiveFeedbackPercentage = Math.round(\r\n      (good / totalFeedback) * 100,\r\n    );\r\n\r\n    if (good !== 0) {\r\n      return PositiveFeedbackPercentage;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const { leaveFeedback, countTotalFeedback, countPositiveFeedbackPercentage } = this;\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions \r\n        options={['good', 'neutral', 'bad']} \r\n        onLeaveFeedback={leaveFeedback}\r\n        />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {countTotalFeedback() === 0 ? \r\n          <Notification message=\"No feedback given\"></Notification> \r\n          :\r\n<         Statistics \r\n          good={good} \r\n          neutral={neutral} \r\n          bad={bad} \r\n          total={countTotalFeedback()} \r\n          positivePercentage={countPositiveFeedbackPercentage()}>\r\n          </Statistics>\r\n          }\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n// import reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Statistics_counter__3WnNF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__PuQle\",\"title\":\"Section_title__lS7sv\"};"],"sourceRoot":""}